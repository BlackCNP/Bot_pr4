
import aiohttp
import logging


OWM_API_KEY = "837b69b2fd6f3e781972f83bd4470fbe"
BASE_URL = "http://api.openweathermap.org/data/2.5/weather"

async def get_weather(city_name: str) -> str:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç—Ä–∏–º—É—î –ø–æ–≥–æ–¥—É –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ –º—ñ—Å—Ç–∞ –∑ OpenWeatherMap.
    –ü–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ø–æ–≥–æ–¥—É –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É.
    """
    params = {
        'q': city_name,
        'appid': OWM_API_KEY,
        'units': 'metric',  
        'lang': 'uk'      
    }
    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(BASE_URL, params=params) as response:
                if response.status == 200:
                    data = await response.json()
                    main = data['main']
                    weather_desc = data['weather'][0]['description']
                    temp = main['temp']
                    feels_like = main['feels_like']
                    city = data['name']
                    return (f"–ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ {city}:\n"
                            f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ {feels_like}¬∞C)\n"
                            f"–û–ø–∏—Å: {weather_desc.capitalize()}")
                elif response.status == 404:
                    return f"ü§∑ –ú—ñ—Å—Ç–æ '{city_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—É –Ω–∞–∑–≤—É."
                elif response.status == 401:
                    logging.error("–ü–æ–º–∏–ª–∫–∞ API –∫–ª—é—á–∞ OpenWeatherMap.")
                    return "‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –∑ —Å–µ—Ä–≤—ñ—Å–æ–º –ø–æ–≥–æ–¥–∏ (–Ω–µ–≤—ñ—Ä–Ω–∏–π –∫–ª—é—á). –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
                else:
                    logging.error(f"–ü–æ–º–∏–ª–∫–∞ OpenWeatherMap: –°—Ç–∞—Ç—É—Å {response.status}, –í—ñ–¥–ø–æ–≤—ñ–¥—å: {await response.text()}")
                    return f"‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏ (–∫–æ–¥: {response.status}). –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
        except aiohttp.ClientConnectorError as e:
            logging.error(f"–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ OpenWeatherMap: {e}")
            return "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤—ñ—Å—É –ø–æ–≥–æ–¥–∏. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑'—î–¥–Ω–∞–Ω–Ω—è."
        except Exception as e:
            logging.exception("–ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏:")
            return "‚ùå –°—Ç–∞–ª–∞—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏."